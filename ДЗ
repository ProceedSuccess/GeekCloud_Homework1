1. Как организовать клиент-серверное взаимодействие?
C помощью библиотек Netty (сервер, так как это проще. 
Если останется время поработать с подкаталогами пользователей, 
то также понадобятся классы NIO - для обхода дерева каталогов и доступа к ним 
(в этом отношении NIO удобнее IO)) и java.io (клиент, опять же так проще).
На стороне сервера будет хранится корневой каталог с подкаталогами пользователей. 
После запроса логина/пароля пользователю предоставится доступ к чтению/записи.
2.Как и в каком виде передавать файлы? 
 Сначала я реализую передачу по сети сериализованных объектов. 
Затем, если будет время, постараюсь реализовать свой протокол передачи данных 
(мне очень интересна эта задача).
3.Как пересылать большие файлы?
 Файлы будут посылаться в виде сериализованных объектов (файл разбит на отдельные объекты) 
— как это конкретно сделать — пока не знаю точно, но наверное, сначала надо оценить размер файла,
 затем разбить его на куски, затем отправить клиенту (или серверу) сообщение, в котором будет указано, 
из скольких объектов состоит файл. Далее на принимающей стороне собираем файл по кускам. 
4.Как пересылать служебные команды?
При сериализации - так же, как и файлы, в виде объектов. Свой протокол : первые байты будут служебными, 
после того, как мы получили поток байтов, читаем первый байт, если он равен, допустим 1, то значит нам
пришла команда, если 2 - то файл. Исходя из того, что нам придетело, мы эти байты по-разному обрабатываем.
5.Что хранить в базе данных?
Каталоги с логинами пользователей. Можно также хранить список всех файлов, 
список пользователей, информацию об объеме скачанных/закачанных файлов 
(не знаю, нужно ли это ообще хранить в БД, но если время останется — то попробую).
Как передавать структуру каталогов/файлов?
 Пока затрудняюсь ответить, первое что приходит на ум - передавать объекты класса java.NIO.Path, 
который в себе содержит информацию о структуре каталога и всех файлах, которые в нем содержаться. 
Какую библиотеку использовать для сетевого взаимодействия: java.io, java.nio, Netty?
Netty и java.io , NIO — если останется время для создания подкаталогов. 
Вообще-то на стороне сервера и для записи файлов также проще использовать NIO 
(я где-то читал, что NIO более быстро работает).
